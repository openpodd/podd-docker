version: '2'
services:
  api:
    build: ${PODD_API_DIR}
    image: podd-docker/api:latest
    env_file:
      - ./env/podd_api.sh
    environment:
      - PODD_DJANGO_SECRET_KEY=${PODD_DJANGO_SECRET_KEY}
      - PODD_RAVEN_DSN=${PODD_RAVEN_DSN}
    ports:
      - 8000:8000
    volumes:
      - ${PODD_API_DIR}:/usr/src/app
    links:
      - redis
      - postgres
      - neo4j
      - elasticsearch
      - cep
    extra_hosts:
      - "docker:${DOCKER_HOST_IP}"
  celery_worker:
    image: podd-docker/api:latest
    command: celery worker -A podd -l INFO
    env_file:
      - ./env/podd_api.sh
      - ./env/podd_api_celery.sh
    environment:
      - PODD_DJANGO_SECRET_KEY=${PODD_DJANGO_SECRET_KEY}
      - PODD_RAVEN_DSN=${PODD_RAVEN_DSN}
    volumes:
      - ${PODD_API_DIR}:/usr/src/app
  celery_beat:
    image: podd-docker/api:latest
    command: celery beat -A podd -l INFO
    env_file:
      - ./env/podd_api.sh
      - ./env/podd_api_celery.sh
    environment:
      - PODD_DJANGO_SECRET_KEY=${PODD_DJANGO_SECRET_KEY}
      - PODD_RAVEN_DSN=${PODD_RAVEN_DSN}
    volumes:
      - ${PODD_API_DIR}:/usr/src/app
  cep:
    build: podd_cep/
  redis:
    image: redis
  postgres:
    build: podd_postgres
    ports:
      - 5432:5432
    env_file:
      - ./env/postgres.sh
    volumes:
      - podd_postgres:/var/lib/postgresql/data/pgdata
  elasticsearch:
    build: podd_elasticsearch
    volumes:
      - podd_elasticsearch:/usr/share/elasticsearch/data/
  neo4j:
    image: neo4j
    volumes:
      - podd_neo4j:/data/
    environment:
      - NEO4J_AUTH=none

volumes:
  podd_postgres:
    external: false
  podd_elasticsearch:
    external: false
  podd_neo4j:
    external: false
